<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog</title>
  
  <subtitle>博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dxx.fun/"/>
  <updated>2018-11-02T11:37:47.290Z</updated>
  <id>https://dxx.fun/</id>
  
  <author>
    <name>Greendev</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ubuntu 16.04 配置Rime输入法（中州韵）</title>
    <link href="https://dxx.fun/20181102/ubuntu-16-04-%E9%85%8D%E7%BD%AERime%E8%BE%93%E5%85%A5%E6%B3%95%EF%BC%88%E4%B8%AD%E5%B7%9E%E9%9F%B5%EF%BC%89/"/>
    <id>https://dxx.fun/20181102/ubuntu-16-04-配置Rime输入法（中州韵）/</id>
    <published>2018-11-02T11:30:00.000Z</published>
    <updated>2018-11-02T11:37:47.290Z</updated>
    
    <content type="html"><![CDATA[<ul><li>安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fcitx-rime</span><br></pre></td></tr></table></figure><ul><li>添加输入法</li></ul><p>我是直接在系统设置里添加</p><p><img src="https://images2018.cnblogs.com/blog/1384145/201804/1384145-20180429134724316-751874085.png" alt="文本输入"></p><ul><li>安装小鹤双拼</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install librime-data-double-pinyin</span><br></pre></td></tr></table></figure><ul><li>修改输入法配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.config/rime/default.custom.yaml</span><br></pre></td></tr></table></figure><pre><code>customization:  distribution_code_name: Weasel  distribution_version: 0.9.30  generator: &quot;Rime::SwitcherSettings&quot;  modified_time: &quot;Mon Jul 21 11:07:43 2014&quot;  rime_version: 1.1.2patch:  &quot;ascii_composer/good_old_caps_lock&quot;: true  &quot;ascii_composer/switch_key&quot;:Caps_Lock: commit_codeControl_L: commit_codeControl_R: noopShift_L: noopShift_R: commit_code  &quot;menu/page_size&quot;: 5  schema_list:- {schema: luna_pinyin}        # 朙月拼音#- {schema: cangjie5}        # 倉頡五代  - {schema: luna_pinyin_fluency}#- {schema: luna_pinyin_simp}    # 朙月拼音 简化字模式#- {schema: luna_pinyin_tw}        # 朙月拼音 臺灣正體模式- {schema: double_pinyin_flypy}    # 小鶴雙拼    &quot;switcher/hotkeys&quot;:- &quot;Control+grave&quot;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td clas
      
    
    </summary>
    
      <category term="Ubuntu" scheme="https://dxx.fun/categories/Ubuntu/"/>
    
    
      <category term="ubuntu" scheme="https://dxx.fun/tags/ubuntu/"/>
    
      <category term="Rime" scheme="https://dxx.fun/tags/Rime/"/>
    
      <category term="输入法" scheme="https://dxx.fun/tags/%E8%BE%93%E5%85%A5%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>CSS选择器 匹配H标签</title>
    <link href="https://dxx.fun/20181102/CSS%E9%80%89%E6%8B%A9%E5%99%A8-%E5%8C%B9%E9%85%8DH%E6%A0%87%E7%AD%BE/"/>
    <id>https://dxx.fun/20181102/CSS选择器-匹配H标签/</id>
    <published>2018-11-02T11:30:00.000Z</published>
    <updated>2018-11-02T11:31:25.983Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&apos;.article :header&apos;)</span><br></pre></td></tr></table></figure><p>匹配h1,h2之类的标题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="前端" scheme="https://dxx.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="https://dxx.fun/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Django2.0 配置静态文件路由，验证网站所有权</title>
    <link href="https://dxx.fun/20181102/Django2-0-%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E8%B7%AF%E7%94%B1%EF%BC%8C%E9%AA%8C%E8%AF%81%E7%BD%91%E7%AB%99%E6%89%80%E6%9C%89%E6%9D%83/"/>
    <id>https://dxx.fun/20181102/Django2-0-配置静态文件路由，验证网站所有权/</id>
    <published>2018-11-02T11:29:00.000Z</published>
    <updated>2018-11-02T11:44:54.228Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django2-0-配置静态文件路由"><a href="#Django2-0-配置静态文件路由" class="headerlink" title="Django2.0 配置静态文件路由"></a>Django2.0 配置静态文件路由</h1><h2 id="这个有什么用？"><a href="#这个有什么用？" class="headerlink" title="这个有什么用？"></a>这个有什么用？</h2><p>在 Google Analytics（分析）、百度统计 添加网站时需要验证网站所有权，这时一般有几种验证方式</p><p>如 Google：</p><blockquote><ol><li><p>HTML 文件 - 上传将 HTML 文件上传到您的网站。</p></li><li><p>HTML 标记 - 向您网站的首页添加元标记。</p></li><li><p>域名提供商  - 登录到您的域名提供商网站。</p></li><li><p>Google 跟踪代码管理器</p></li></ol></blockquote><p>本文就是配置为了 <code>1. HTML 文件</code>，</p><h2 id="为什么要用-HTML-文件-来验证？"><a href="#为什么要用-HTML-文件-来验证？" class="headerlink" title="为什么要用 HTML 文件  来验证？"></a>为什么要用 HTML 文件  来验证？</h2><ul><li><p>HTML 标记 </p><blockquote><p>需要在网站首页添加<code>&lt;meta&gt;</code> 标签，强迫症，不想加</p></blockquote></li><li><p>域名提供商 </p><blockquote><p>因为把裸域设成了<code>CNAME</code>，所有用不了这个（好像不应该设置裸域）</p></blockquote></li><li><p>Google 跟踪代码管理器</p><blockquote><p>不知道为什么添加不了，以后再看</p></blockquote></li><li><p>HTML文件</p><blockquote><p>就剩你了</p></blockquote></li></ul><h2 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h2><ul><li><p>导入静态视图</p><blockquote><p><code>django.contrib.staticfiles.views.serve</code>视图会在静态文件目录查找指定的<code>path</code>文件</p><p>也就是要把HTML文件存放在STATIC目录,或者指定<code>document_root</code></p></blockquote></li></ul><h3 id="设置urls-py"><a href="#设置urls-py" class="headerlink" title="设置urls.py"></a>设置urls.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fromc</span><br></pre></td></tr></table></figure><ul><li><p>添加路由</p><ol><li><p>使用django.urls.path</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">     </span><br><span class="line">path(<span class="string">'googledadae4a424161111.html'</span>, serve,</span><br><span class="line">     kwargs=&#123;<span class="string">'path'</span>:<span class="string">'googledadae4a424161111.html'</span>&#125;,</span><br><span class="line">     name=<span class="string">'googleAnalytics'</span>),</span><br></pre></td></tr></table></figure></li><li><p>使用django.conf.urls.url</p><blockquote><p>django2.0 添加了re_path，url是re_path的别名，完全调用re_path</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line"><span class="comment">#     .... 其他配置</span></span><br><span class="line">url(<span class="string">r'^googledadae4a424161111.html$'</span>, serve, name=<span class="string">'googleAnalytics'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ol></li></ul><h2 id="懒人专用配置"><a href="#懒人专用配置" class="headerlink" title="懒人专用配置"></a>懒人专用配置</h2><blockquote><p>匹配所有html文件</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line"><span class="comment"># .... 其他配置</span></span><br><span class="line">url(<span class="string">r'^(?P&lt;path&gt;[a-zA-Z0-9]*\.html)$'</span>, serve, name=<span class="string">'html_file'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Django2-0-配置静态文件路由&quot;&gt;&lt;a href=&quot;#Django2-0-配置静态文件路由&quot; class=&quot;headerlink&quot; title=&quot;Django2.0 配置静态文件路由&quot;&gt;&lt;/a&gt;Django2.0 配置静态文件路由&lt;/h1&gt;&lt;h2 id=&quot;这
      
    
    </summary>
    
      <category term="Django" scheme="https://dxx.fun/categories/Django/"/>
    
    
      <category term="Python" scheme="https://dxx.fun/tags/Python/"/>
    
      <category term="DJango" scheme="https://dxx.fun/tags/DJango/"/>
    
      <category term="静态文件" scheme="https://dxx.fun/tags/%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 16.04 python 3.x 安装OpenSSL</title>
    <link href="https://dxx.fun/20181102/ubuntu-16-04-python-3-x-%E5%AE%89%E8%A3%85OpenSSL/"/>
    <id>https://dxx.fun/20181102/ubuntu-16-04-python-3-x-安装OpenSSL/</id>
    <published>2018-11-02T11:29:00.000Z</published>
    <updated>2018-11-02T11:38:15.828Z</updated>
    
    <content type="html"><![CDATA[<h2 id="错误提示："><a href="#错误提示：" class="headerlink" title="错误提示："></a>错误提示：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Can&apos;t connect to HTTPS URL because the SSL module is not available.</span><br></pre></td></tr></table></figure><blockquote><p>连接HTTPS时，提示SSL不可用</p></blockquote><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 进入python</span><br><span class="line">$ python3  # or python3.6</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 导入SSL模块</span><br><span class="line">&gt;&gt;&gt; import ssl</span><br></pre></td></tr></table></figure><p>如果出现下面提示，则Python不支持SSL。</p><p><img src="https://images2018.cnblogs.com/blog/1384145/201804/1384145-20180429165801348-1690821802.png" alt="错误提示"></p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h2><ul><li><p>OpenSSL</p><ul><li><code>$ wget http://www.openssl.org/source/openssl-1.0.2e.tar.gz</code></li></ul></li><li><p>Python3.6 - 选择需要的版本</p><ul><li><code>$wget https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tgz</code></li></ul></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="OpenSSL"><a href="#OpenSSL" class="headerlink" title="OpenSSL"></a>OpenSSL</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 解压文件</span><br><span class="line">tar xvzf openssl-1.0.2e.tar.gz</span><br><span class="line"># 进入目录</span><br><span class="line">$ ./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ make</span><br><span class="line">$ make test</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><h5 id="进入目录"><a href="#进入目录" class="headerlink" title="进入目录"></a>进入目录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#解压</span><br><span class="line">$ tar xvzf Python-3.6.2.tgz</span><br><span class="line">$ cd Python-3.6.2</span><br></pre></td></tr></table></figure><h5 id="修改安装配置"><a href="#修改安装配置" class="headerlink" title="修改安装配置"></a>修改安装配置</h5><blockquote><p>使用VIM打开文件<code>Modules/Setup.dist</code>文件，搜索SSL，取消四行注释</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim Modules/Setup.dist</span><br></pre></td></tr></table></figure><p><img src="https://images2018.cnblogs.com/blog/1384145/201804/1384145-20180429171524384-1487806264.png" alt="修改配置"></p><h5 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h5><blockquote><p>完成上面操作就可以安装了，执行下面3行代码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./configure</span><br><span class="line">$ make</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure><h3 id="完成！"><a href="#完成！" class="headerlink" title="完成！"></a>完成！</h3><blockquote><p>不出意外已经安装完成，下面检测一下。</p></blockquote><ul><li><p>进入python</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>导入SSL模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import ssl</span><br></pre></td></tr></table></figure><p><img src="https://images2018.cnblogs.com/blog/1384145/201804/1384145-20180429172217490-445021225.png" alt="导入成功"></p></li></ul><blockquote><h3 id="没有报错就已经成功了！"><a href="#没有报错就已经成功了！" class="headerlink" title="没有报错就已经成功了！"></a>没有报错就已经成功了！</h3></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;错误提示：&quot;&gt;&lt;a href=&quot;#错误提示：&quot; class=&quot;headerlink&quot; title=&quot;错误提示：&quot;&gt;&lt;/a&gt;错误提示：&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="Ubuntu" scheme="https://dxx.fun/categories/Ubuntu/"/>
    
    
      <category term="Ubuntu" scheme="https://dxx.fun/tags/Ubuntu/"/>
    
      <category term="python3" scheme="https://dxx.fun/tags/python3/"/>
    
      <category term="OpenSSL" scheme="https://dxx.fun/tags/OpenSSL/"/>
    
  </entry>
  
  <entry>
    <title>Python 基础 - 数据类型 - 字符串类型与操作</title>
    <link href="https://dxx.fun/20181102/Python-%E5%9F%BA%E7%A1%80-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%93%8D%E4%BD%9C/"/>
    <id>https://dxx.fun/20181102/Python-基础-数据类型-字符串类型与操作/</id>
    <published>2018-11-02T11:28:00.000Z</published>
    <updated>2018-11-02T11:39:54.874Z</updated>
    
    <content type="html"><![CDATA[<p>#数据类型</p><h2 id="字符串-str"><a href="#字符串-str" class="headerlink" title="字符串 str"></a>字符串 str</h2><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><ul><li>单引号</li><li>双引号        </li><li>三引号        多行. 利用其特点,可用于注释</li></ul><h3 id="1-切片-同列表"><a href="#1-切片-同列表" class="headerlink" title="1. 切片(同列表)"></a>1. 切片(同列表)</h3><blockquote><p>使用[M:N:K]根据步长对字符串切片<br><strong>M</strong> 缺失表示<strong>至开头</strong><br><strong>N</strong> 缺失表示<strong>至结尾</strong><br><strong>K</strong> 缺失表示<strong>步长1</strong></p></blockquote><h4 id="正向递增序号"><a href="#正向递增序号" class="headerlink" title="正向递增序号"></a>正向递增序号</h4><ul><li>‘hello world’[:5]  == ‘hello’</li></ul><h4 id="反向递减序号"><a href="#反向递减序号" class="headerlink" title="反向递减序号"></a>反向递减序号</h4><ul><li>‘hello world’[-5:]  == ‘world’ </li></ul><h4 id="步长"><a href="#步长" class="headerlink" title="步长"></a>步长</h4><ul><li>‘1234567890’[::2]  == ‘13579’</li><li>步长为负, 反转字符串<ul><li>‘1234567890’[::-1]  == ‘0987654321’</li></ul></li></ul><h3 id="2-转义符"><a href="#2-转义符" class="headerlink" title="2. 转义符"></a>2. 转义符</h3><ul><li>(在行尾时)    续行符</li><li>\\             反斜杠符号</li><li>\’            单引号</li><li>\”            双引号</li><li>\b            退格(Backspace,光标向前退一格)</li><li>\000            空</li><li>\n            换行(光标移动到下行首)</li><li>\r            回车(光标移动到本行首)</li><li>\t            横向制表符</li></ul><hr><ul><li>\a            响铃</li><li>\e            转义</li><li>\v            纵向制表符</li><li>\f            换页</li><li>\oyy            八进制数，yy代表的字符，例如：\o12代表换行</li><li>\xyy            十六进制数，yy代表的字符，例如：\x0a代表换行</li><li>\other        其它的字符以普通格式输出</li></ul><h3 id="3-字符串操作符"><a href="#3-字符串操作符" class="headerlink" title="3. 字符串操作符"></a>3. 字符串操作符</h3><h4 id="x-y"><a href="#x-y" class="headerlink" title="x + y"></a>x + y</h4><pre><code>- 连接两个字符串x和y </code></pre><h4 id="n-x-或-x-n"><a href="#n-x-或-x-n" class="headerlink" title="n*x 或 x*n"></a>n*x 或 x*n</h4><pre><code>- 复制n次字符串x</code></pre><h4 id="x-in-s"><a href="#x-in-s" class="headerlink" title="x in s"></a>x in s</h4><pre><code>- 如果x是s的子串, 返回True, 否则返回False</code></pre><h3 id="4-字符串处理函数"><a href="#4-字符串处理函数" class="headerlink" title="4. 字符串处理函数"></a>4. 字符串处理函数</h3><h4 id="len-x"><a href="#len-x" class="headerlink" title="len(x)"></a>len(x)</h4><pre><code>- 长度, 返回字符串x的长度- len(&quot;一二三456&quot;) 结果为6</code></pre><h4 id="str-x"><a href="#str-x" class="headerlink" title="str(x)"></a>str(x)</h4><pre><code>- 任意类型x所对应的字符串形式- str(1.23) 结果为&quot;1.23&quot;- str([1, 2]) 结果为&quot;[1, 2]&quot;</code></pre><h4 id="hex-x"><a href="#hex-x" class="headerlink" title="hex(x)"></a>hex(x)</h4><pre><code>- 整数x的十六进制小写形式字符串- hex(425) 结果为&quot;0x1a9&quot;</code></pre><h4 id="oct-x"><a href="#oct-x" class="headerlink" title="oct(x)"></a>oct(x)</h4><pre><code>- 整数x的八进制小写形式字符串- oct(425) 结果为&quot;0o651&quot;</code></pre><h4 id="chr-u"><a href="#chr-u" class="headerlink" title="chr(u)"></a>chr(u)</h4><pre><code>- u为Unicode编码, 返回其对应的字符</code></pre><h4 id="ord-x"><a href="#ord-x" class="headerlink" title="ord(x)"></a>ord(x)</h4><pre><code>- x为字符, 返回其对应的Unicode编码</code></pre><h4 id="str-lower"><a href="#str-lower" class="headerlink" title="str.lower()"></a>str.lower()</h4><pre><code>- 返回字符串的副本, 全部字符小写- &apos;AbcDeF&apos;.upper() 结果为&quot;abcdef&quot;</code></pre><h4 id="str-upper"><a href="#str-upper" class="headerlink" title="str.upper()"></a>str.upper()</h4><pre><code>- 返回字符串的副本, 全部字符大写- &apos;AbcDeF&apos;.upper() 结果为&quot;ABCDEF&quot;</code></pre><h4 id="str-split-sep-None"><a href="#str-split-sep-None" class="headerlink" title="str.split(sep=None)"></a>str.split(sep=None)</h4><pre><code>- 返回一个列表, 由str根据sep被分割的部分组成- &quot;A,B,C&quot;.split(&quot;,&quot;) 结果为[&apos;A&apos;, &apos;B&apos;, &apos;C&apos;]</code></pre><h4 id="str-count-sub"><a href="#str-count-sub" class="headerlink" title="str.count(sub)"></a>str.count(sub)</h4><pre><code>- 返回子串sub在str中出现的次数- &quot;a apple a day&quot;.count(&quot;a&quot;) 结果为4</code></pre><h4 id="str-replace-old-new"><a href="#str-replace-old-new" class="headerlink" title="str.replace(old, new)"></a>str.replace(old, new)</h4><pre><code>- 返回字符串str副本, 所有old子串被替换为new- &quot;python&quot;.replace(&quot;n&quot;, &quot;n123&quot;) 结果为&quot;python123&quot;</code></pre><h4 id="str-center-width-fillchar-”-“"><a href="#str-center-width-fillchar-”-“" class="headerlink" title="str.center(width, fillchar=” “)"></a>str.center(width, fillchar=” “)</h4><pre><code>- 字数串str根据宽度width居中, fillchar可选- &quot;python&quot;.center(10,&apos;=&apos;) 结果为&apos;==python==&apos;</code></pre><h4 id="str-strip-chars"><a href="#str-strip-chars" class="headerlink" title="str.strip(chars)"></a>str.strip(chars)</h4><pre><code>- 从str中去掉在其左侧和右侧,chars中列出的字符- &quot;== python ==&quot;.strip(&quot; =pn&quot;) 结果为&quot;ytho&quot;</code></pre><h4 id="str-join-iter"><a href="#str-join-iter" class="headerlink" title="str.join(iter)"></a>str.join(iter)</h4><pre><code>- 主要用于字符串分割- 在iter变量除最后元素外每个元素后增加一个str- &quot;,&quot;.join(&quot;12345&quot;) 结果为 &quot;1,2,3,4,5&quot;</code></pre><p>###　5. 字符串格式化</p><blockquote><p>“{0} / {1} / {2}”.format(2018, 10, 24)</p><p>>> 2018 / 10 / 24</p><p>{序号} 为槽</p><p>槽的内部对格式化的配置方式<br>{&lt;参数序号&gt;:&lt;格式控制标记&gt;}<br>:&lt;填充&gt;|&lt;对齐&gt;|&lt;宽度&gt;|&lt;,&gt;|&lt;.精度&gt;|&lt;类型&gt;</p></blockquote><h4 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h4><ul><li>用于填充的单个字符</li></ul><h4 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h4><ul><li>&lt; 左对齐</li><li>> 右对齐</li><li>^ 居中对齐</li></ul><h4 id="宽度"><a href="#宽度" class="headerlink" title="宽度"></a>宽度</h4><ul><li>槽设定的输出宽度</li></ul><h4 id="逗号"><a href="#逗号" class="headerlink" title=",(逗号)"></a>,(逗号)</h4><ul><li>数字的千位分隔符</li></ul><h4 id="精度"><a href="#精度" class="headerlink" title=".精度"></a>.精度</h4><ul><li>浮点数小数精度 或 字数串最大输出长度</li></ul><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><ul><li>整数类型<ul><li>b</li><li>c</li><li>d</li><li>o</li><li>x</li><li>X</li></ul></li><li>浮点数类型<ul><li>e</li><li>E</li><li>f</li><li>%</li></ul></li></ul><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&#123;0:=^50,.3f&#125;"</span>.format(<span class="number">500000.12345</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'===================500,000.123===================='</span></span><br></pre></td></tr></table></figure><ul><li><strong>0</strong>    序号</li><li><strong>=</strong> 填充</li><li><strong>^</strong>    居中对齐</li><li><strong>50</strong> 宽度50</li><li><strong>,</strong>    千位分割</li><li><strong>.3</strong> 保留3为小数</li><li><strong>f</strong> 浮点类型</li></ul><hr><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3><h4 id="AD"><a href="#AD" class="headerlink" title="AD"></a>AD</h4><ul><li><a href="https://zfdev.com" title="https://zfdev.com" target="_blank" rel="noopener">https://zfdev.com</a></li><li><a href="https://dxx.fun" title="https://dxx.fun">https://dxx.fun</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#数据类型&lt;/p&gt;
&lt;h2 id=&quot;字符串-str&quot;&gt;&lt;a href=&quot;#字符串-str&quot; class=&quot;headerlink&quot; title=&quot;字符串 str&quot;&gt;&lt;/a&gt;字符串 str&lt;/h2&gt;&lt;h3 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="Python" scheme="https://dxx.fun/categories/Python/"/>
    
    
      <category term="Python" scheme="https://dxx.fun/tags/Python/"/>
    
      <category term="字符串" scheme="https://dxx.fun/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="String" scheme="https://dxx.fun/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装node vue</title>
    <link href="https://dxx.fun/20181102/ubuntu%E5%AE%89%E8%A3%85node-vue/"/>
    <id>https://dxx.fun/20181102/ubuntu安装node-vue/</id>
    <published>2018-11-02T11:28:00.000Z</published>
    <updated>2018-11-02T11:38:32.773Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nodejs"><a href="#Nodejs" class="headerlink" title="Nodejs"></a>Nodejs</h1><ul><li><p>下载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nodejs.org/dist/v8.11.1/node-v8.11.1-linux-x64.tar.xz</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#</span><br></pre></td></tr></table></figure></li><li><p>安装(移动)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sudo mkdir /usr/local/node/</span><br><span class="line">$sudo mv node-v8.11.1-linux-x64 /usr/local/node/v8.11.1</span><br></pre></td></tr></table></figure></li><li><p>软链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sudo ln -s /usr/local/node/v8.11.1/bin/node /usr/local/bin/node</span><br><span class="line">$sudo ln -s /usr/local/node/v8.11.1/bin/npm /usr/local/bin/npm</span><br></pre></td></tr></table></figure></li><li><p>安装cnpm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">$sudo ln -s /usr/local/node/v8.11.1/bin/cnpm /usr/local/bin/cnpm</span><br></pre></td></tr></table></figure></li><li><p>添加环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>.bashrc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export NODE_HOME=/usr/local/node/v8.11.1/</span><br><span class="line">export PATH=$PATH:$NODE_HOME/bin </span><br><span class="line">export NODE_PATH=$NODE_HOME/lib/node_modules</span><br></pre></td></tr></table></figure></li><li><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></li></ul><h1 id="VUE"><a href="#VUE" class="headerlink" title="VUE"></a>VUE</h1><ul><li>安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cnpm install --global vue-cli</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Nodejs&quot;&gt;&lt;a href=&quot;#Nodejs&quot; class=&quot;headerlink&quot; title=&quot;Nodejs&quot;&gt;&lt;/a&gt;Nodejs&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="Ubuntu" scheme="https://dxx.fun/categories/Ubuntu/"/>
    
    
      <category term="Ubuntu" scheme="https://dxx.fun/tags/Ubuntu/"/>
    
      <category term="Node" scheme="https://dxx.fun/tags/Node/"/>
    
      <category term="Vue" scheme="https://dxx.fun/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>python虚拟环境 Virtualenv及Virtualenvwrapper</title>
    <link href="https://dxx.fun/20181102/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83-Virtualenv%E5%8F%8AVirtualenvwrapper/"/>
    <id>https://dxx.fun/20181102/python虚拟环境-Virtualenv及Virtualenvwrapper/</id>
    <published>2018-11-02T11:27:00.000Z</published>
    <updated>2018-11-02T11:39:26.676Z</updated>
    
    <content type="html"><![CDATA[<h1 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h1><h2 id="虚拟环境原理介绍："><a href="#虚拟环境原理介绍：" class="headerlink" title="虚拟环境原理介绍："></a>虚拟环境原理介绍：</h2><blockquote><p>虚拟环境相当于一个抽屉，在这个抽屉中安装的任何软件包都不会影响到其他抽屉。并且在项目中，我可以指定这个项目的虚拟环境来配合我的项目。比如我们现在有一个项目是基于Django 1.10.x版本，又有一个项目是基于Django 0.9.x的版本，那么这时候就可以创建两个虚拟环境，在这两个虚拟环境中分别安装Django 1.10.x和Django 0.9.x来适配我们的项目。</p></blockquote><h2 id="virtualenv"><a href="#virtualenv" class="headerlink" title="virtualenv"></a>virtualenv</h2><h3 id="安装virtualenv："><a href="#安装virtualenv：" class="headerlink" title="安装virtualenv："></a>安装virtualenv：</h3><p>virtualenv是用来创建虚拟环境的软件工具，我们可以通过pip或者pip3来安装：</p><pre><code>pip install virtualenvpip3 install virtualenv</code></pre><h3 id="创建虚拟环境："><a href="#创建虚拟环境：" class="headerlink" title="创建虚拟环境："></a>创建虚拟环境：</h3><p>创建虚拟环境非常简单，通过以下命令就可以创建了：</p><pre><code>virtualenv [虚拟环境的名字]</code></pre><p>如果你当前的Python3/Scripts的查找路径在Python2/Scripts的前面，那么将会使用python3作为这个虚拟环境的解释器。<br>如果python2/Scripts在python3/Scripts前面，那么将会使用Python2来作为这个虚拟环境的解释器。</p><h3 id="进入环境："><a href="#进入环境：" class="headerlink" title="进入环境："></a>进入环境：</h3><p>虚拟环境创建好了以后，那么可以进入到这个虚拟环境中，然后安装一些第三方包，进入虚拟环境在不同的操作系统中有不同的方式，一般分为两种，第一种是Windows，第二种是*nix：</p><h4 id="windows进入虚拟环境："><a href="#windows进入虚拟环境：" class="headerlink" title="windows进入虚拟环境："></a>windows进入虚拟环境：</h4><p>进入到虚拟环境的Scripts文件夹中，然后执行activate。</p><h4 id="nix进入虚拟环境："><a href="#nix进入虚拟环境：" class="headerlink" title="*nix进入虚拟环境："></a>*nix进入虚拟环境：</h4><pre><code>source /path/to/virtualenv/bin/activate </code></pre><p>一旦你进入到了这个虚拟环境中，你安装包，卸载包都是在这个虚拟环境中，不会影响到外面的环境。</p><h3 id="退出虚拟环境："><a href="#退出虚拟环境：" class="headerlink" title="退出虚拟环境："></a>退出虚拟环境：</h3><p>退出虚拟环境很简单，通过一个命令就可以完成：</p><pre><code>deactivate</code></pre><h3 id="创建虚拟环境的时候指定Python解释器："><a href="#创建虚拟环境的时候指定Python解释器：" class="headerlink" title="创建虚拟环境的时候指定Python解释器："></a>创建虚拟环境的时候指定Python解释器：</h3><p>在电脑的环境变量中，一般是不会去更改一些环境变量的顺序的。<br>也就是说比如你的Python2/Scripts在Python3/Scripts的前面，那么你不会经常去更改他们的位置。<br>但是这时候我确实是想在创建虚拟环境的时候用Python3这个版本，这时候可以通过-p参数来指定具体的Python解释器：</p><pre><code>virtualenv -p C:\Python36\python.exe [virutalenv name]</code></pre><h2 id="virtualenvwrapper："><a href="#virtualenvwrapper：" class="headerlink" title="virtualenvwrapper："></a>virtualenvwrapper：</h2><blockquote><p>virtualenvwrapper这个软件包可以让我们管理虚拟环境变得更加简单。<br>不用再跑到某个目录下通过virtualenv来创建虚拟环境，并且激活的时候也要跑到具体的目录下去激活。</p></blockquote><h3 id="安装virtualenvwrapper："><a href="#安装virtualenvwrapper：" class="headerlink" title="安装virtualenvwrapper："></a>安装virtualenvwrapper：</h3><h4 id="nix："><a href="#nix：" class="headerlink" title="*nix："></a>*nix：</h4><pre><code>pip install virtualenvwrapper</code></pre><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><pre><code>pip install virtualenvwrapper-win</code></pre><h3 id="virtualenvwrapper基本使用："><a href="#virtualenvwrapper基本使用：" class="headerlink" title="virtualenvwrapper基本使用："></a>virtualenvwrapper基本使用：</h3><h4 id="创建虚拟环境：-1"><a href="#创建虚拟环境：-1" class="headerlink" title="创建虚拟环境："></a>创建虚拟环境：</h4><pre><code>mkvirtualenv my_env</code></pre><p>那么会在你当前用户下创建一个Env的文件夹，然后将这个虚拟环境安装到这个目录下。<br>如果你电脑中安装了python2和python3，并且两个版本中都安装了virtualenvwrapper，那么将会使用环境变量中第一个出现的Python版本来作为这个虚拟环境的Python解释器。</p><h4 id="切换到某个虚拟环境："><a href="#切换到某个虚拟环境：" class="headerlink" title="切换到某个虚拟环境："></a>切换到某个虚拟环境：</h4><pre><code>workon my_env</code></pre><h4 id="退出当前虚拟环境："><a href="#退出当前虚拟环境：" class="headerlink" title="退出当前虚拟环境："></a>退出当前虚拟环境：</h4><pre><code>deactivate</code></pre><h4 id="删除某个虚拟环境："><a href="#删除某个虚拟环境：" class="headerlink" title="删除某个虚拟环境："></a>删除某个虚拟环境：</h4><pre><code>rmvirtualenv my_env</code></pre><h4 id="列出所有虚拟环境："><a href="#列出所有虚拟环境：" class="headerlink" title="列出所有虚拟环境："></a>列出所有虚拟环境：</h4><pre><code>lsvirtualenv</code></pre><h4 id="进入到虚拟环境所在的目录："><a href="#进入到虚拟环境所在的目录：" class="headerlink" title="进入到虚拟环境所在的目录："></a>进入到虚拟环境所在的目录：</h4><pre><code>cd virtualenv</code></pre><h4 id="修改mkvirtualenv的默认路径："><a href="#修改mkvirtualenv的默认路径：" class="headerlink" title="修改mkvirtualenv的默认路径："></a>修改mkvirtualenv的默认路径：</h4><p>在我的电脑-&gt;右键-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;系统变量中添加一个参数WORKON_HOME，将这个参数的值设置为你需要的路径。</p><h4 id="创建虚拟环境的时候指定Python版本："><a href="#创建虚拟环境的时候指定Python版本：" class="headerlink" title="创建虚拟环境的时候指定Python版本："></a>创建虚拟环境的时候指定Python版本：</h4><p>在使用mkvirtualenv的时候，可以指定–python的参数来指定具体的python路径：</p><pre><code>mkvirtualenv --python==C:\Python36\python.exe hy_env</code></pre><blockquote><p><a href="https://virtualenvwrapper.readthedocs.io/en/latest/command_ref.html" target="_blank" rel="noopener">virtualenvwrapper 命令的完全列表</a></p></blockquote><p>参考：<a href="http://pythonguidecn.readthedocs.io/zh/latest/dev/virtualenvs.html" target="_blank" rel="noopener">http://pythonguidecn.readthedocs.io/zh/latest/dev/virtualenvs.html</a></p><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3><h4 id="AD"><a href="#AD" class="headerlink" title="AD"></a>AD</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;虚拟环境&quot;&gt;&lt;a href=&quot;#虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;虚拟环境&quot;&gt;&lt;/a&gt;虚拟环境&lt;/h1&gt;&lt;h2 id=&quot;虚拟环境原理介绍：&quot;&gt;&lt;a href=&quot;#虚拟环境原理介绍：&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="Python" scheme="https://dxx.fun/categories/Python/"/>
    
    
      <category term="Python" scheme="https://dxx.fun/tags/Python/"/>
    
      <category term="Virtualenv" scheme="https://dxx.fun/tags/Virtualenv/"/>
    
      <category term="Virtualenvwrapper" scheme="https://dxx.fun/tags/Virtualenvwrapper/"/>
    
  </entry>
  
  <entry>
    <title>Django 2.0 静态文件404解决方法</title>
    <link href="https://dxx.fun/20181102/Django-2-0-%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6404%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://dxx.fun/20181102/Django-2-0-静态文件404解决方法/</id>
    <published>2018-11-02T11:27:00.000Z</published>
    <updated>2018-11-02T11:45:57.244Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Django 在 Debug=True 时, 不需要配置. Django会在App中需找STATIC路径.<br>因为服务器一直用Nginx配置STATIC路径, 所以一直没有配置开发环境的STATIC路径,<br>但需要测试生产环境还是不方便, 所以设置一下Django中的STATIC路由.</p></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="project-urls-py"><a href="#project-urls-py" class="headerlink" title="project/urls.py"></a>project/urls.py</h4><pre><code>from django.views.static import serveurlpatterns = [url(r&apos;^static/(?P&lt;path&gt;.*)$&apos;, serve, {&apos;document_root&apos;: settings.STATIC_ROOT}, name=&apos;static&apos;),    ...]</code></pre><h4 id="project-settings-py"><a href="#project-settings-py" class="headerlink" title="project/settings.py"></a>project/settings.py</h4><pre><code>INSTALLED_APPS = [    &apos;django.contrib.staticfiles&apos;,    ......]STATIC_URL = &apos;/static/&apos;STATIC_ROOT = os.path.join(BASE_DIR, &apos;static&apos;)STATICFILES_DIRS = (    os.path.join(BASE_DIR, &apos;apps/appname/static/&apos;),)</code></pre><h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><h4 id="STATIC"><a href="#STATIC" class="headerlink" title="STATIC"></a>STATIC</h4><ul><li>project/static/…</li><li><a href="http://127.0.0.1:8000/static/.." target="_blank" rel="noopener">http://127.0.0.1:8000/static/..</a>.</li></ul><h4 id="APP-STATIC"><a href="#APP-STATIC" class="headerlink" title="APP_STATIC"></a>APP_STATIC</h4><ul><li>project/.?/appname/STATIC</li><li><a href="http://127.0.0.1:8000/static/.." target="_blank" rel="noopener">http://127.0.0.1:8000/static/..</a>.</li></ul><p>部署时使用需收集App下的STATIC文件到project/static/, 命令</p><pre><code>python manage.py collectstatic</code></pre><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3><h4 id="AD"><a href="#AD" class="headerlink" title="AD"></a>AD</h4><blockquote><p><a href="https://dxx.fun/c/Python.html" title="https://dxx.fun/c/Python.html">https://dxx.fun/c/Python.html</a><br><a href="https://zfdev.com" title="https://zfdev.com" target="_blank" rel="noopener">https://zfdev.com</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Django 在 Debug=True 时, 不需要配置. Django会在App中需找STATIC路径.&lt;br&gt;因为服务器一直用Nginx配置STATIC路径, 所以一直没有配置开发环境的STATIC路径,&lt;br&gt;但需要测试生产环境还是不方便, 
      
    
    </summary>
    
      <category term="Django" scheme="https://dxx.fun/categories/Django/"/>
    
    
      <category term="Python" scheme="https://dxx.fun/tags/Python/"/>
    
      <category term="Django" scheme="https://dxx.fun/tags/Django/"/>
    
      <category term="静态文件" scheme="https://dxx.fun/tags/%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>pm2</title>
    <link href="https://dxx.fun/20181102/pm2/"/>
    <id>https://dxx.fun/20181102/pm2/</id>
    <published>2018-11-02T11:16:00.000Z</published>
    <updated>2018-11-02T11:34:28.122Z</updated>
    
    <content type="html"><![CDATA[<h3 id="run-js"><a href="#run-js" class="headerlink" title="run.js"></a>run.js</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//run</span><br><span class="line">const &#123; exec &#125; = require(&apos;child_process&apos;)</span><br><span class="line">exec(&apos;hexo server -i 0.0.0.0 -p 8020 -d&apos;,(error, stdout, stderr) =&gt; &#123;</span><br><span class="line">        if(error)&#123;</span><br><span class="line">                console.log(&apos;exec error: $&#123;error&#125;&apos;)</span><br><span class="line">                return</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(&apos;stdout: $&#123;stdout&#125;&apos;);</span><br><span class="line">        console.log(&apos;stderr: $&#123;stderr&#125;&apos;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><a href="https://blog.csdn.net/tangcuyuha/article/details/80331169" target="_blank" rel="noopener">source</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;run-js&quot;&gt;&lt;a href=&quot;#run-js&quot; class=&quot;headerlink&quot; title=&quot;run.js&quot;&gt;&lt;/a&gt;run.js&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
      <category term="前端" scheme="https://dxx.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Node" scheme="https://dxx.fun/tags/Node/"/>
    
      <category term="pm2" scheme="https://dxx.fun/tags/pm2/"/>
    
      <category term="Hexo" scheme="https://dxx.fun/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo-admin deploy</title>
    <link href="https://dxx.fun/20181102/hexo-admin-deploy/"/>
    <id>https://dxx.fun/20181102/hexo-admin-deploy/</id>
    <published>2018-11-02T11:09:00.000Z</published>
    <updated>2018-11-02T11:34:49.955Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-config-yml"><a href="#1-config-yml" class="headerlink" title="1. _config.yml"></a>1. <code>_config.yml</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin:</span><br><span class="line">  deployCommand: &apos;sh hexo-deploy.sh&apos;</span><br></pre></td></tr></table></figure><h3 id="2-hexo-deploy-sh"><a href="#2-hexo-deploy-sh" class="headerlink" title="2. hexo-deploy.sh"></a>2. <code>hexo-deploy.sh</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h3 id="3-blog-node-modules-hexo-admin-deploy-js"><a href="#3-blog-node-modules-hexo-admin-deploy-js" class="headerlink" title="3. blog\node_modules\hexo-admin\deploy.js"></a>3. <code>blog\node_modules\hexo-admin\deploy.js</code></h3><ul><li><p>old</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var proc = spawn(command, [message], &#123;detached: true&#125;);</span><br></pre></td></tr></table></figure></li><li><p>new</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var proc = spawn((process.platform === &quot;win32&quot; ? &quot;hexo.cmd&quot; : &quot;hexo&quot;), [&apos;d&apos;, &apos;-g&apos;]);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-config-yml&quot;&gt;&lt;a href=&quot;#1-config-yml&quot; class=&quot;headerlink&quot; title=&quot;1. _config.yml&quot;&gt;&lt;/a&gt;1. &lt;code&gt;_config.yml&lt;/code&gt;&lt;/h3&gt;&lt;figure class=&quot;h
      
    
    </summary>
    
      <category term="前端" scheme="https://dxx.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Hexo" scheme="https://dxx.fun/tags/Hexo/"/>
    
      <category term="deploy" scheme="https://dxx.fun/tags/deploy/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://dxx.fun/20181102/hello-world/"/>
    <id>https://dxx.fun/20181102/hello-world/</id>
    <published>2018-11-02T08:27:02.487Z</published>
    <updated>2018-11-02T08:27:02.487Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
